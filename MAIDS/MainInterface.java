package ALLEN_CODE;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author allen
 */
public class MainInterface extends javax.swing.JFrame {

    /**
     * Creates new form MainInterface
     */
    String EmpName, EmpNum, patientFullName, patientAge, patientID;
    public MainInterface(String EMPName, String EMPNum, String pFullName, String age, String PatientID) {
        this.EmpName = EMPName;
        this.EmpNum = EMPNum;
        this.patientFullName = pFullName;
        this.patientAge = age;
        this.patientID = PatientID;
        initComponents();
        startRealTimeUpdate();
        scaleImage ();
        try {
            Connectivity();
            this.loadData();
        } catch (SQLException ex) {
            Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        public MainInterface(String EMPName, String EMPNum, String PatientID) {
        this.EmpName = EMPName;
        this.EmpNum = EMPNum;
        this.patientID = PatientID;
        initComponents();
        startRealTimeUpdate();
        scaleImage ();
        try {
            Connectivity();
            this.loadData();
        } catch (SQLException ex) {
            Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        public MainInterface() {
        this.EmpName = "";
        this.EmpNum = "";
        this.patientFullName = "";
        this.patientAge = "";
        this.patientID = "";
        initComponents();
        startRealTimeUpdate();
        scaleImage ();
        try {
            Connectivity();
            this.loadData();
        } catch (SQLException ex) {
            Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void scaleImage () {
        ImageIcon icon = new ImageIcon("C:\\Users\\admin\\OneDrive\\Documents\\NetBeansProjects\\[FINAL] OOP\\src\\img\\blank_image.jpg");
        Image img = icon.getImage();
        Image imgScale = img.getScaledInstance(lbl_patientImage.getWidth(),lbl_patientImage.getHeight(),Image.SCALE_SMOOTH);
        ImageIcon scaledIcon = new ImageIcon(imgScale);
        lbl_patientImage.setIcon(scaledIcon);
    }
    
    private void startRealTimeUpdate() {
        // Create a timer that triggers every second (1000 milliseconds)
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Update lbl_DateToday with the current date and time
                LocalDate today = LocalDate.now();
                jLabel3.setText("Date : " + today.toString());
            }
        });
        
        // Start the timer
        timer.start();
    }
    
    Connection con;
    /* SQL Statement */
    Statement st;
    PreparedStatement pst;
    ResultSet rs;
    
    private static final String DBname = "maids_database";
    private static final String DBdriver = "com.mysql.cj.jdbc.Driver";
    private static final String DBurl = "jdbc:mysql://localhost:3306/" + DBname;
    private static final String DBIDNumber = "root"; 
    private static final String DBPassword = "";
    
    public void Connectivity() throws SQLException {
        
        try {
            Class.forName(DBdriver);
            con = DriverManager.getConnection(DBurl,DBIDNumber,DBPassword);
            st = con.createStatement();
            if (con != null) {
                System.out.println(patientID);
                System.out.println("Connection Successful");
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        label1 = new java.awt.Label();
        jPanel1 = new javax.swing.JPanel();
        lbl_patientLabel = new javax.swing.JLabel();
        lb_patientName = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lbl_patientImage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        info_tbl = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lbl_employeeNumber = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_reasonOfVisit = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtarea_Findings = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtarea_Treatment = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        lbl_Status = new javax.swing.JLabel();
        btn_update = new javax.swing.JButton();
        btn_clr = new javax.swing.JButton();
        btn_dlte = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        label1.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lbl_patientLabel.setFont(new java.awt.Font("Myanmar Text", 1, 18)); // NOI18N
        lbl_patientLabel.setForeground(new java.awt.Color(0, 153, 153));
        lbl_patientLabel.setText("PATIENT RECORD");

        lb_patientName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lb_patientName.setForeground(new java.awt.Color(0, 153, 153));
        lb_patientName.setText("Name : " + patientFullName);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 153));
        jLabel2.setText("Age : " + patientAge);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        info_tbl.setBackground(new java.awt.Color(255, 255, 255));
        info_tbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Date", "Purpose", "Diagnosis", "Prescription", "Case #"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        info_tbl.setSelectionBackground(new java.awt.Color(0, 153, 153));
        info_tbl.setSelectionForeground(new java.awt.Color(255, 255, 255));
        info_tbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                info_tblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(info_tbl);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_patientLabel)
                            .addComponent(lb_patientName)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_patientImage, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_patientLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_patientName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lbl_patientImage, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Myanmar Text", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("DIAGNOSIS");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Hello M.D. " + this.EmpName);

        lbl_employeeNumber.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lbl_employeeNumber.setForeground(new java.awt.Color(255, 255, 255));
        lbl_employeeNumber.setText("#" + this.EmpNum);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Patient Reason of Visit");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Date :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Findings");

        txtarea_Findings.setColumns(20);
        txtarea_Findings.setRows(5);
        jScrollPane2.setViewportView(txtarea_Findings);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Treatment / Prescription");

        txtarea_Treatment.setColumns(20);
        txtarea_Treatment.setRows(5);
        jScrollPane3.setViewportView(txtarea_Treatment);

        jButton1.setBackground(new java.awt.Color(172, 216, 230));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setText("Insert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        lbl_Status.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lbl_Status.setForeground(new java.awt.Color(255, 255, 255));
        lbl_Status.setText("Status");
        lbl_Status.setToolTipText("");

        btn_update.setBackground(new java.awt.Color(172, 216, 230));
        btn_update.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_update.setText("Update");
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        btn_clr.setBackground(new java.awt.Color(172, 216, 230));
        btn_clr.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_clr.setText("Clear");
        btn_clr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clrActionPerformed(evt);
            }
        });

        btn_dlte.setBackground(new java.awt.Color(172, 216, 230));
        btn_dlte.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_dlte.setText("Delete");
        btn_dlte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_dlteActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(172, 216, 230));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton2.setText("<- Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(246, 246, 246)
                                .addComponent(jLabel5)
                                .addContainerGap(77, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(btn_clr, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(btn_dlte)
                                        .addGap(18, 18, 18)
                                        .addComponent(btn_update)
                                        .addGap(12, 12, 12)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lbl_Status))
                                    .addComponent(txt_reasonOfVisit, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(lbl_employeeNumber)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addGap(42, 42, 42))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbl_employeeNumber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbl_Status))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_reasonOfVisit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel5))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btn_update)
                    .addComponent(btn_clr)
                    .addComponent(btn_dlte))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

public void loadData() {
    try {
       
        st = con.createStatement();
        
        DefaultTableModel model = new DefaultTableModel(new String[]{"Date", "Purpose", "Diagnosis", "Prescription", "Case #"}, 0);
        
        // Set the table model
        info_tbl.setModel(model);

        // Query to get all patient details
        String sql = "SELECT * FROM patienthistory WHERE PatientID = ?";
        pst = con.prepareStatement(sql); 
        
        pst.setString(1, this.patientID); 

        // Execute the query and get the ResultSet
        ResultSet rs = pst.executeQuery();
       
        while (rs.next()) {
            String date = rs.getString("date");
            String purpose = rs.getString("purpose");
            String diagnosis = rs.getString("diagnosis");
            String prescription = rs.getString("prescription");
            String caseNumber = rs.getString("caseNumber"); // Get caseNumber

            // Debugging: Print the fetched data to the console
            System.out.println("Date: " + date + ", Purpose: " + purpose + ", Diagnosis: " + diagnosis + ", Prescription: " + prescription + ", Case #: " + caseNumber);

            // Add the row to the model
            model.addRow(new Object[]{date, purpose, diagnosis, prescription, caseNumber}); // Add caseNumber to the row
        }

        // Close ResultSet and PreparedStatement to free up resources
        rs.close();
        pst.close();
        
    } catch (SQLException ex) {
        ex.printStackTrace(); // Print the error details for debugging
    }
}
    //INSERT BUTTON
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String purpose, diagnosis, prescription, caseNumber, patientID;
        
        if("".equals(txt_reasonOfVisit.getText()) || "".equals(txtarea_Findings.getText()) ||"".equals(txtarea_Treatment.getText()) ){
           JOptionPane.showMessageDialog(new JFrame(), "Please fill up the text areas to update");
        } else {
            
            purpose = txt_reasonOfVisit.getText();
            diagnosis = txtarea_Findings.getText();
            prescription = txtarea_Treatment.getText();
            patientID = this.patientID;
                    
            Random rand = new Random();
            
            int currentYear = LocalDate.now().getYear();
            int randomInt = 10000 + rand.nextInt(10000);
            
            caseNumber = String.format("%d%04d", currentYear, randomInt);
            
            LocalDate dateOfVisit = LocalDate.now();
            
            /*Temp values*/
            
            int row = 0;
            
            try {
                String sql = "SELECT MAX(row) AS maxRow FROM patienthistory";
                ResultSet rs = st.executeQuery(sql);
        
                if (rs.next()) {
                    row = rs.getInt("maxRow") + 1; // Increment the max row by 1
                }
                rs.close();
            } catch (SQLException ex) {
                Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
             
            String queryData = "INSERT INTO patienthistory (row, date, purpose, diagnosis, prescription, caseNumber, PatientID) "
                   + "VALUES ('" + row + "','" + dateOfVisit + "','" + purpose + "','" + diagnosis + "', '" + prescription + "', '" + caseNumber + "', '" + patientID + "')";
            
            try {
                st.execute(queryData);
            } catch (SQLException ex) {
                Logger.getLogger(MainInterface.class.getName()).log(Level.SEVERE, null, ex);
            }

                lbl_Status.setText("Added Successfully");
                lbl_Status.setForeground(Color.GREEN);
                txt_reasonOfVisit.setText("");
                txtarea_Findings.setText("");
                txtarea_Treatment.setText("");
                loadData();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void info_tblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_info_tblMouseClicked
        DefaultTableModel tblModel = (DefaultTableModel)info_tbl.getModel();
        
        String tblPurpose = tblModel.getValueAt(info_tbl.getSelectedRow(),1).toString();
        String tblDiagnosis = tblModel.getValueAt(info_tbl.getSelectedRow(),2).toString();
        String tblPrescription = tblModel.getValueAt(info_tbl.getSelectedRow(),3).toString();
        
        txt_reasonOfVisit.setText(tblPurpose);
        txtarea_Findings.setText(tblDiagnosis);
        txtarea_Treatment.setText(tblPrescription);
    }//GEN-LAST:event_info_tblMouseClicked

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) info_tbl.getModel();
        
    if (info_tbl.getSelectedRowCount() == 1) {
        // Get the selected row index
        int selectedRowIndex = info_tbl.getSelectedRow();

        // Retrieve the caseNumber for the selected record
        String caseNumber = tblModel.getValueAt(selectedRowIndex, 4).toString(); // Assuming caseNumber is in the fifth column
        
        // Get new values from the text fields
        String newPurpose = txt_reasonOfVisit.getText();
        String newFindings = txtarea_Findings.getText();
        String newTreatment = txtarea_Treatment.getText();
        
        // Construct SQL UPDATE query
        String updateQuery = "UPDATE patienthistory SET purpose = ?, diagnosis = ?, prescription = ? WHERE caseNumber = ?";
        
        try {
            // Prepare statement to avoid SQL injection
            PreparedStatement pstmt = con.prepareStatement(updateQuery);
            pstmt.setString(1, newPurpose);
            pstmt.setString(2, newFindings);
            pstmt.setString(3, newTreatment);
            pstmt.setString(4, caseNumber); // Use caseNumber to identify the record
            
            // Execute the update
            int rowsAffected = pstmt.executeUpdate();
            
            // Check if the update was successful
            if (rowsAffected > 0) {
                // Update the table model to reflect changes
                tblModel.setValueAt(newPurpose, selectedRowIndex, 1);
                tblModel.setValueAt(newFindings, selectedRowIndex, 2);
                tblModel.setValueAt(newTreatment, selectedRowIndex, 3);
                
                JOptionPane.showMessageDialog(this, "Updated Successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Update failed. Please try again.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating the database: " + e.getMessage());
        }
    } else {
        if (info_tbl.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "There is no Data in the Table!");
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a row to update");
        }
    }
        
    lbl_Status.setText("Updated Successfully");
                lbl_Status.setForeground(Color.YELLOW);
                txt_reasonOfVisit.setText("");
                txtarea_Findings.setText("");
                txtarea_Treatment.setText("");
    
    }//GEN-LAST:event_btn_updateActionPerformed

    private void btn_clrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clrActionPerformed
        lbl_Status.setText("Cleared");
                lbl_Status.setForeground(Color.BLUE);
                txt_reasonOfVisit.setText("");
                txtarea_Findings.setText("");
                txtarea_Treatment.setText("");
    }//GEN-LAST:event_btn_clrActionPerformed

    private void btn_dlteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_dlteActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)info_tbl.getModel();
        lbl_Status.setText("Data Deleted");
        lbl_Status.setForeground(Color.RED);
        txt_reasonOfVisit.setText("");
        txtarea_Findings.setText("");
        txtarea_Treatment.setText("");
        
    // Check if a row is selected
    if (info_tbl.getSelectedRowCount() == 1) {
        // Get the selected row index
        int selectedRowIndex = info_tbl.getSelectedRow();
        
        // Retrieve the unique identifier for the selected record (caseNumber)
        String caseNumber = tblModel.getValueAt(selectedRowIndex, 4).toString(); // Assuming caseNumber is in the fifth column
        
        // Construct SQL DELETE query
        String deleteQuery = "DELETE FROM patienthistory WHERE caseNumber = ?";
        
        try {
            // Prepare statement to avoid SQL injection
            PreparedStatement pstmt = con.prepareStatement(deleteQuery);
            pstmt.setString(1, caseNumber);
            
            // Execute the delete
            int rowsAffected = pstmt.executeUpdate();
            
            // Check if the delete was successful
            if (rowsAffected > 0) {
                // Remove the row from the table model
                tblModel.removeRow(selectedRowIndex);
                JOptionPane.showMessageDialog(this, "Deleted Successfully!");
            } else {
                JOptionPane.showMessageDialog(this, "Delete failed. Please try again.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error deleting from the database: " + e.getMessage());
        }
    } else {
        if (info_tbl.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "There is no Data in the Table!");
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a row to delete");
        }
    }
    }//GEN-LAST:event_btn_dlteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                TempMenu main = new TempMenu();
                main.setLocationRelativeTo(null);
                main.setResizable(false);
                this.dispose();
                main.setTitle("Nurse Menu");
                main.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainInterface main = new MainInterface();
                main.loadData();
                main.setLocationRelativeTo(null);
                main.setResizable(false);
                main.setTitle("Main Interface");
                main.setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_clr;
    private javax.swing.JButton btn_dlte;
    private javax.swing.JButton btn_update;
    private javax.swing.JTable info_tbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private java.awt.Label label1;
    private javax.swing.JLabel lb_patientName;
    private javax.swing.JLabel lbl_Status;
    private javax.swing.JLabel lbl_employeeNumber;
    private javax.swing.JLabel lbl_patientImage;
    private javax.swing.JLabel lbl_patientLabel;
    private javax.swing.JTextField txt_reasonOfVisit;
    private javax.swing.JTextArea txtarea_Findings;
    private javax.swing.JTextArea txtarea_Treatment;
    // End of variables declaration//GEN-END:variables
}
